trigger:
- main

pool:
  name: Default

steps:
- script: |
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    nvm use 16
  displayName: 'Use NVM and Set Node.js Version'

- script: node --version
  displayName: 'Check Node.js Version'

- script: echo $NVM_DIR
  displayName: 'Check NVM_DIR'
  
- script: |
    cat /home/ubuntu/myagent/WorkDir/_tasks/SonarQubePrepare_15b84ca1-b62f-4a2a-a403-89b77a063157/4.36.0/node_modules/hpagent/index.js
  displayName: 'Debug SonarQubePrepare JavaScript'

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'HelloWorldProject_SonarQube'
    scannerMode: 'MSBuild'
    projectKey: 'Hello_World_Project_Hello_World_Project_AYxio5OHkVImKS8uzBdC'
    projectName: 'Hello World Project'

- script: dotnet restore HelloWorld/HelloWorld.csproj /p:Version=1.0.$(Build.BuildId)
  displayName: 'Restore dependencies'

- script: dotnet build HelloWorld/HelloWorld.csproj --configuration Release /p:Version=1.0.$(Build.BuildId)
  displayName: 'Build project'

- task: SonarQubeAnalyze@4

- task: SonarQubePublish@4
  inputs:
    pollingTimeoutSec: '300'

- script: |
    echo "Current Version: 1.0.$(Build.BuildId)"
  displayName: 'Print Version'

- script: dotnet pack HelloWorld/HelloWorld.csproj --configuration Release --output nupkgs /p:Version=1.0.$(Build.BuildId)
  displayName: 'Pack NuGet package'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'HelloWorld/bin/Release'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- script: dotnet nuget push "nupkgs/*.nupkg" --source "https://pkgs.dev.azure.com/OriElias/_packaging/OriElias/nuget/v3/index.json" --api-key az --skip-duplicate
  displayName: 'Push package to Azure Artifacts'

- script: dotnet run --project HelloWorld/HelloWorld.csproj
  displayName: 'Run application'
